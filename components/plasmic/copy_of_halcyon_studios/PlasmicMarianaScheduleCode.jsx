// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */
/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */
// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: 2p9VhVhxAWhB5Nusx9QUQ2
// Component: B45lS1hhx1Vs
import * as React from "react";
import { useRouter } from "next/router";
import {
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts,
  useCurrentUser,
  usePlasmicTranslator
} from "@plasmicapp/react-web";
import { useDataEnv } from "@plasmicapp/react-web/lib/host";
import { Embed } from "@plasmicpkgs/plasmic-basic-components";
import "@plasmicapp/react-web/lib/plasmic.css";
import plasmic_antd_5_hostless_css from "../antd_5_hostless/plasmic.module.css"; // plasmic-import: ohDidvG9XsCeFumugENU3J/projectcss
import plasmic_plasmic_rich_components_css from "../plasmic_rich_components/plasmic.module.css"; // plasmic-import: jkU633o1Cz7HrJdwdxhVHk/projectcss
import projectcss from "./plasmic.module.css"; // plasmic-import: 2p9VhVhxAWhB5Nusx9QUQ2/projectcss
import sty from "./PlasmicMarianaScheduleCode.module.css"; // plasmic-import: B45lS1hhx1Vs/css

createPlasmicElementProxy;

export const PlasmicMarianaScheduleCode__VariantProps = new Array();

export const PlasmicMarianaScheduleCode__ArgProps = new Array();

const $$ = {};

function useNextRouter() {
  try {
    return useRouter();
  } catch {}
  return undefined;
}

function PlasmicMarianaScheduleCode__RenderFunc(props) {
  const { variants, overrides, forNode } = props;
  const $translator = usePlasmicTranslator?.();
  const args = React.useMemo(() => Object.assign({}, props.args), [props.args]);
  const $props = {
    ...args,
    ...variants
  };
  const __nextRouter = useNextRouter();
  const $ctx = useDataEnv?.() || {};
  const refsRef = React.useRef({});
  const $refs = refsRef.current;
  const currentUser = useCurrentUser?.() || {};
  return (
    <Embed
      data-plasmic-name={"marianaScheduleCode"}
      data-plasmic-override={overrides.marianaScheduleCode}
      data-plasmic-root={true}
      data-plasmic-for-node={forNode}
      className={classNames(
        "__wab_instance",
        projectcss.root_reset,
        projectcss.plasmic_default_styles,
        projectcss.plasmic_mixins,
        projectcss.plasmic_tokens,
        plasmic_antd_5_hostless_css.plasmic_tokens,
        plasmic_plasmic_rich_components_css.plasmic_tokens,
        sty.marianaScheduleCode
      )}
      code={'<div data-mariana-integrations="/schedule/daily"></div>'}
    />
  );
}

const PlasmicDescendants = {
  marianaScheduleCode: ["marianaScheduleCode"]
};

function makeNodeComponent(nodeName) {
  const func = function (props) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: PlasmicDescendants[nodeName],
          internalArgPropNames: PlasmicMarianaScheduleCode__ArgProps,
          internalVariantPropNames: PlasmicMarianaScheduleCode__VariantProps
        }),
      [props, nodeName]
    );
    return PlasmicMarianaScheduleCode__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "marianaScheduleCode") {
    func.displayName = "PlasmicMarianaScheduleCode";
  } else {
    func.displayName = `PlasmicMarianaScheduleCode.${nodeName}`;
  }
  return func;
}

export const PlasmicMarianaScheduleCode = Object.assign(
  // Top-level PlasmicMarianaScheduleCode renders the root element
  makeNodeComponent("marianaScheduleCode"),
  {
    // Helper components rendering sub-elements
    // Metadata about props expected for PlasmicMarianaScheduleCode
    internalVariantProps: PlasmicMarianaScheduleCode__VariantProps,
    internalArgProps: PlasmicMarianaScheduleCode__ArgProps
  }
);

export default PlasmicMarianaScheduleCode;
/* prettier-ignore-end */
